@use 'sass:map';

$media-breakpoints: (
  xsmall: 375px,
  small: 600px,
  tablet: 868px,
  medium: 1024px,
  xmedium: 1280px,
  large: 1400px,
  xlarge: 1920px,
  xlarge2k: 2048px,
  xlarge4k: 4096px,
);

@mixin respond-to ($media) {
  $breakpoint: map.get($media-breakpoints, $media);

  @if $breakpoint {
    @media (max-width: ($breakpoint - 1)) {
      @content;
    }
  }

  @else {
    @media (max-width: ($media - 1)) {
      @content;
    }
  }
}

@mixin text-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin field-label {
  font-family: var(--field-label-font-family);
  font-size: var(--field-label-font-size);
  font-weight: var(--field-label-font-weight);
  line-height: var(--field-label-line-height);
  letter-spacing: var(--field-label-letter-spacing);
  color: var(--field-label);
  margin-bottom: var(--field-label-margin-bottom);
  transition: var(--transition-duration-fast) var(--transition-timing-default);
  max-width: max-content;
}

@mixin field-text {
  font-family: var(--field-text-font-family);
  font-size: var(--field-text-font-size);
  font-weight: var(--field-text-font-weight);
  line-height: var(--field-text-line-height);
  letter-spacing: var(--field-text-letter-spacing);
  color: var(--field-text);
  -webkit-text-fill-color: var(--field-text);

  &:disabled {
    color: var(--field-text-readonly);
    -webkit-text-fill-color: var(--field-text-readonly);
  }
}

@mixin field-placeholder {
  font-family: var(--field-text-font-family);
  font-size: var(--field-text-font-size);
  font-weight: var(--field-text-font-weight);
  line-height: var(--field-text-line-height);
  letter-spacing: var(--field-text-letter-spacing);
  color: var(--field-placeholder);
  -webkit-text-fill-color: var(--field-placeholder);
  fill: var(--field-placeholder);
  transition: var(--transition-duration-fast) var(--transition-timing-default);
  transition-property: opacity, color;
  opacity: 1;
}

@mixin field-placeholder-readonly {
  font-family: var(--field-text-font-family);
  font-size: var(--field-text-font-size);
  font-weight: var(--field-text-font-weight);
  line-height: var(--field-text-line-height);
  letter-spacing: var(--field-text-letter-spacing);
  color: var(--field-placeholder-readonly);
  -webkit-text-fill-color: var(--field-placeholder-readonly);
  fill: var(--field-placeholder-readonly);
  transition: var(--transition-duration-fast) var(--transition-timing-default);
  transition-property: opacity, color;
  opacity: 1;
}

@mixin field-error {
  font-family: var(--field-error-font-family);
  font-size: var(--field-error-font-size);
  font-weight: var(--field-error-font-weight);
  line-height: var(--field-error-line-height);
  letter-spacing: var(--field-error-letter-spacing);
  color: var(--field-error);
  margin-top: var(--field-error-margin-top);
  transition: var(--transition-duration-fast) var(--transition-timing-default);
  transition-property: opacity, color, font-size, transform;
}

@mixin field-border {
  border: toRem(1) solid var(--field-border);
  border-radius: var(--field-border-radius);
}

@mixin drop-item-shadow {
  box-shadow: 0 toRem(1) toRem(2) rgba(var(--black-rgb), 0.3),
    0 toRem(2) toRem(6) toRem(2) rgba(var(--black-rgb), 0.15);
}

@mixin scrollbar {
  &::-webkit-scrollbar {
    width: toRem(12);
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--secondary-main);
    border: toRem(4) solid rgba(var(--black-rgb), 0);
    background-clip: padding-box;
    border-radius: toRem(100);
  }
}

@mixin solidity-tools-page-base {
  display: flex;
  flex-direction: column;
  gap: toRem(32);

  @include respond-to(medium) {
    gap: toRem(24);
  }
}

@mixin solidity-tools-page-content {
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  padding: toRem(40);
  border-radius: 0 0 var(--border-radius-main) var(--border-radius-main);
  background: var(--background-secondary-main);

  @include respond-to(medium) {
    padding: toRem(24) toRem(16) toRem(24) toRem(16);
  }
}

@mixin solidity-tools-page-content-loader-wrp {
  $z-index: 100;

  position: absolute;
  inset: 0;
  z-index: $z-index;
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--backdrop-modal);
}

@mixin solidity-tools-form {
  display: grid;
  grid-gap: toRem(40);

  @include respond-to(medium) {
    grid-gap: toRem(24);
  }
}

@mixin solidity-tools-form-part {
  display: grid;
  grid-gap: toRem(20);

  @include respond-to(medium) {
    grid-gap: toRem(16) toRem(24);
  }
}

@mixin solidity-tools-form-divider {
  height: toRem(1);
  background: var(--border-primary-main);
}

@mixin solidity-tools-abi-form-link-btn-wrp {
  display: flex;
  justify-content: center;
  border-top: toRem(1) solid var(--border-primary-main);
  border-radius: 0 0 var(--border-radius-main) var(--border-radius-main);
  padding: toRem(16) toRem(40);
}

@mixin page-msg {
  max-width: toRem(420);
  width: 100%;
  margin: auto;
}

@mixin p-16-semi-bold {
  font-family: var(--app-font-family-main);
  font-size: toRem(16);
  font-weight: 600;
  line-height: toRem(24);
  letter-spacing: 0;
}

@mixin p-16-medium {
  font-family: var(--app-font-family-main);
  font-size: toRem(16);
  font-weight: 500;
  line-height: toRem(24);
  letter-spacing: 0;
}

@mixin p-16-regular {
  font-family: var(--app-font-family-main);
  font-size: toRem(16);
  font-weight: 400;
  line-height: toRem(24);
  letter-spacing: 0;
}

@mixin p-14-semi-bold {
  font-family: var(--app-font-family-main);
  font-size: toRem(14);
  font-weight: 600;
  line-height: toRem(22);
  letter-spacing: 0;
}

@mixin p-14-medium {
  font-family: var(--app-font-family-main);
  font-size: toRem(14);
  font-weight: 500;
  line-height: toRem(22);
  letter-spacing: 0;
}

@mixin p-14-regular {
  font-family: var(--app-font-family-main);
  font-size: toRem(14);
  font-weight: 400;
  line-height: toRem(22);
  letter-spacing: 0;
}

@mixin p-12-light {
  font-family: var(--app-font-family-main);
  font-size: toRem(12);
  font-weight: 300;
  line-height: toRem(20);
  letter-spacing: 0;
}

@mixin drop-item-transition {
  .drop-item {
    &-enter-active {
      animation:
        drop-item
        var(--transition-duration-fast)
        var(--transition-timing-default);
    }

    &-leave-active {
      animation:
        drop-item
        var(--transition-duration-fast)
        var(--transition-timing-default)
        reverse;
    }
  }

  @keyframes drop-item {
    from {
      opacity: 0;
      transform: scale(0.8);
    }

    to {
      opacity: 1;
    }
  }
}
